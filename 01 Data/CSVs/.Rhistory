position=position_identity()
)
# Three data frames for specific graphing cases
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from DEATH where NUMBER_OF_DEATHS < 100000"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_nar784', PASS='orcl_nar784', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
# Three data frames for specific graphing cases
death_df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from DEATH where NUMBER_OF_DEATHS < 100000"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_nar784', PASS='orcl_nar784', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
summary(death_df)
View(df)
View(df)
order by clarity;"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_UTEid', PASS='orcl_UTEid', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON', p1=KPI_Low_Max_value, p2=KPI_Medium_Max_value), verbose = TRUE))); View(df)
# The following is equivalent to KPI Story 2 Sheet 2 and Parameters Story 3 in "Crosstabs, KPIs, Barchart.twb"
# These will be made to more resemble Tableau Parameters when we study Shiny.
KPI_Low_Max_value = 4750
KPI_Medium_Max_value = 5000
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"select color, clarity, sum_price, round(sum_carat) as sum_carat, kpi as ratio,
case
when kpi < "p1" then \\\'03 Low\\\'
when kpi < "p2" then \\\'02 Medium\\\'
else \\\'01 High\\\'
end kpi
from (select color, clarity,
sum(price) sum_price, sum(carat) sum_carat,
sum(price) / sum(carat) kpi
from diamonds
group by color, clarity)
order by clarity;"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_UTEid', PASS='orcl_UTEid', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON', p1=KPI_Low_Max_value, p2=KPI_Medium_Max_value), verbose = TRUE))); View(df)
KPI_Low_Max_value = 4750
KPI_Medium_Max_value = 5000
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"select color, clarity, sum_price, round(sum_carat) as sum_carat, kpi as ratio,
case
when kpi < "p1" then \\\'03 Low\\\'
when kpi < "p2" then \\\'02 Medium\\\'
else \\\'01 High\\\'
end kpi
from (select color, clarity,
sum(price) sum_price, sum(carat) sum_carat,
sum(price) / sum(carat) kpi
from diamonds
group by color, clarity)
order by clarity;"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_UTEid', PASS='orcl_UTEid', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON', p1=KPI_Low_Max_value, p2=KPI_Medium_Max_value), verbose = TRUE))); View(df)
summary(death_df)
KPI_df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"select YEAR, COUTRY_CODE, COUNTRY_NAME, AGE_GROUP, round(NUMBER_OF_DEATHS) as NUMBER_OF_DEATHS, kpi as ratio,
case
when kpi < "p1" then \\\'03 Low\\\'
when kpi < "p2" then \\\'02 Medium\\\'
else \\\'01 High\\\'
end kpi
from (select COUNTRY_CODE, COUNTRY_NAME,AGE_GROUP,
sum(NUMBER_OF_DEATHS) NUMBER_OF_DEATHS, sum(DEATH_RATE_PER_100_000), DEATH_RATE_PER_100_000,
sum(NUMBER_OF_DEATHS) / sum(DEATH_RATE_PER_100_000) kpi
from diamonds
group by SEX, AGE_GROUP)
order by AGE_GROUP;"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_nar784', PASS='orcl_nar784', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON', p1=KPI_Low_Max_value, p2=KPI_Medium_Max_value), verbose = TRUE))); View(df)
KPI_df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"select YEAR, COUTRY_CODE, COUNTRY_NAME, AGE_GROUP, round(NUMBER_OF_DEATHS) as NUMBER_OF_DEATHS, kpi as ratio,
case
when kpi < "p1" then \\\'03 Low\\\'
when kpi < "p2" then \\\'02 Medium\\\'
else \\\'01 High\\\'
end kpi
from (select COUNTRY_CODE, COUNTRY_NAME,AGE_GROUP,
sum(NUMBER_OF_DEATHS) NUMBER_OF_DEATHS, sum(DEATH_RATE_PER_100_000), DEATH_RATE_PER_100_000,
sum(NUMBER_OF_DEATHS) / sum(DEATH_RATE_PER_100_000) kpi
from DEATH
group by SEX, AGE_GROUP)
order by AGE_GROUP;"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_nar784', PASS='orcl_nar784', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON', p1=KPI_Low_Max_value, p2=KPI_Medium_Max_value), verbose = TRUE))); View(df)
KPI_df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"select YEAR, COUTRY_CODE, COUNTRY_NAME, AGE_GROUP, round(NUMBER_OF_DEATHS) as NUMBER_OF_DEATHS, kpi as ratio,
case
when kpi < "p1" then \\\'03 Low\\\'
when kpi < "p2" then \\\'02 Medium\\\'
else \\\'01 High\\\'
end kpi
from (select COUNTRY_CODE, COUNTRY_NAME,AGE_GROUP,
sum(NUMBER_OF_DEATHS) NUMBER_OF_DEATHS, sum(DEATH_RATE_PER_100_000), DEATH_RATE_PER_100_000,
sum(NUMBER_OF_DEATHS) / sum(DEATH_RATE_PER_100_000) kpi
from DEATH
group by SEX, AGE_GROUP)
order by AGE_GROUP;"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_nar784', PASS='orcl_nar784', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON', p1=KPI_Low_Max_value, p2=KPI_Medium_Max_value), verbose = TRUE))); View(KPI_df)
KPI_Low_Max_value = 10000
KPI_Medium_Max_value = 500000
KPI_df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"select YEAR, COUTRY_CODE, COUNTRY_NAME, AGE_GROUP, round(NUMBER_OF_DEATHS) as NUMBER_OF_DEATHS, kpi as ratio, case
when kpi < "p1" then \\\'03 Low\\\'
when kpi < "p2" then \\\'02 Medium\\\'
else \\\'01 High\\\'
end kpi
from (select COUNTRY_CODE, COUNTRY_NAME,AGE_GROUP,sum(NUMBER_OF_DEATHS) NUMBER_OF_DEATHS, sum(DEATH_RATE_PER_100_000), DEATH_RATE_PER_100_000,sum(NUMBER_OF_DEATHS) / sum(DEATH_RATE_PER_100_000) kpi from DEATH group by SEX, AGE_GROUP) order by AGE_GROUP;"')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_nar784', PASS='orcl_nar784', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON', p1=KPI_Low_Max_value, p2=KPI_Medium_Max_value), verbose = TRUE))); View(KPI_df)
KPI_Low_Max_value = 100000
KPI_Medium_Max_value = 500000
KPI_df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"select YEAR, COUTRY_CODE, COUNTRY_NAME, AGE_GROUP, round(NUMBER_OF_DEATHS) as NUMBER_OF_DEATHS, kpi as ratio, case
when kpi < "p1" then \\\'03 Low\\\'
when kpi < "p2" then \\\'02 Medium\\\'
else \\\'01 High\\\'
end kpi
from (select YEAR, COUNTRY_CODE, COUNTRY_NAME,AGE_GROUP,sum(NUMBER_OF_DEATHS) NUMBER_OF_DEATHS, sum(DEATH_RATE_PER_100_000), DEATH_RATE_PER_100_000,sum(NUMBER_OF_DEATHS) / sum(DEATH_RATE_PER_100_000) kpi from DEATH group by SEX, AGE_GROUP) order by AGE_GROUP;"')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_nar784', PASS='orcl_nar784', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON', p1=KPI_Low_Max_value, p2=KPI_Medium_Max_value), verbose = TRUE))); View(KPI_df)
summary(death_df)
KPI_Low_Max_value = 4750
KPI_Medium_Max_value = 5000
KPI_df <- death_df %>% group_by(AGE_GROUP, SEX) %>% summarize(sum_death = sum(NUMBER_OF_DEATHS), sum_100 = sum(DEATH_RATE_PER_100_000)) %>% mutate(ratio = sum_death / sum_100) %>% mutate(kpi = ifelse(ratio <= KPI_Low_Max_value, '03 Low', ifelse(ratio <= KPI_Medium_Max_value, '02 Medium', '01 High'))) %>% rename(age_group=AGE_GROUP, sex=SEX, SUM_DEATH=sum_death, SUM_100=sum_100, RATIO=ratio, KPI=kpi)
KPI_df <- death_df %>% group_by(AGE_GROUP, SEX) %>% summarize(sum_death = sum(NUMBER_OF_DEATHS), sum_100 = sum(DEATH_RATE_PER_100_000)) %>% mutate(ratio = sum_death / sum_100) %>% mutate(kpi = ifelse(ratio <= KPI_Low_Max_value, '03 Low', ifelse(ratio <= KPI_Medium_Max_value, '02 Medium', '01 High'))) %>% rename(age_group=AGE_GROUP, sex=SEX, SUM_DEATH=sum_death, SUM_100=sum_100, RATIO=ratio, KPI=kpi)%>%tbl_df
view(KPI_df)
KPI_df <- death_df %>% group_by(AGE_GROUP, SEX) %>% summarize(sum_death = sum(NUMBER_OF_DEATHS), sum_100 = sum(DEATH_RATE_PER_100_000)) %>% mutate(ratio = sum_death / sum_100) %>% mutate(kpi = ifelse(ratio <= KPI_Low_Max_value, '03 Low', ifelse(ratio <= KPI_Medium_Max_value, '02 Medium', '01 High'))) %>% rename(age_group=AGE_GROUP, sex=SEX, SUM_DEATH=sum_death, SUM_100=sum_100, RATIO=ratio, KPI=kpi)%>%tbl_df
View(KPI_df)
KPI_Low_Max_value = .50
KPI_Medium_Max_value = 1
KPI_df <- death_df %>% group_by(AGE_GROUP, SEX) %>% summarize(sum_death = sum(NUMBER_OF_DEATHS), sum_100 = sum(DEATH_RATE_PER_100_000)) %>% mutate(ratio = sum_death / sum_100) %>% mutate(kpi = ifelse(ratio <= KPI_Low_Max_value, '03 Low', ifelse(ratio <= KPI_Medium_Max_value, '02 Medium', '01 High'))) %>% rename(age_group=AGE_GROUP, sex=SEX, SUM_DEATH=sum_death, SUM_100=sum_100, RATIO=ratio, KPI=kpi)%>%tbl_df
View(KPI_df)
summary(KPI_df)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_discrete() +
labs(title='Diamonds Crosstab\nSUM_PRICE, SUM_CARAT, SUM_PRICE / SUM_CARAT') +
labs(x=paste("COLOR"), y=paste("CLARITY")) +
layer(data=death_df,
mapping=aes(x=age_group, y=sex, label=SUM_DEATH),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black"),
position=position_identity()
) +
layer(data=death_df,
mapping=aes(x=age_group, y=sex, label=SUM_100),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", vjust=2),
position=position_identity()
) +
layer(data=death_df,
mapping=aes(x=age_group, y=sex, label=round(RATIO, 2)),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", vjust=4),
position=position_identity()
) +
layer(data=death_df,
mapping=aes(x=age_group, y=sex, fill=KPI),
stat="identity",
stat_params=list(),
geom="tile",
geom_params=list(alpha=0.50),
position=position_identity()
)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_discrete() +
labs(title='Diamonds Crosstab\nSUM_PRICE, SUM_CARAT, SUM_PRICE / SUM_CARAT') +
labs(x=paste("COLOR"), y=paste("CLARITY")) +
layer(data=KPI_df,
mapping=aes(x=age_group, y=sex, label=SUM_DEATH),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black"),
position=position_identity()
) +
layer(data=KPI_df,
mapping=aes(x=age_group, y=sex, label=SUM_100),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", vjust=2),
position=position_identity()
) +
layer(data=KPI_df,
mapping=aes(x=age_group, y=sex, label=round(RATIO, 2)),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", vjust=4),
position=position_identity()
) +
layer(data=KPI_df,
mapping=aes(x=age_group, y=sex, fill=KPI),
stat="identity",
stat_params=list(),
geom="tile",
geom_params=list(alpha=0.50),
position=position_identity()
)
KPI_df <- death_df %>% group_by(AGE_GROUP, SEX) %>% summarize(sum_death = sum(NUMBER_OF_DEATHS)/100000, sum_100 = sum(DEATH_RATE_PER_100_000)/100000) %>% mutate(ratio = sum_death / sum_100) %>% mutate(kpi = ifelse(ratio <= KPI_Low_Max_value, '03 Low', ifelse(ratio <= KPI_Medium_Max_value, '02 Medium', '01 High'))) %>% rename(age_group=AGE_GROUP, sex=SEX, SUM_DEATH=sum_death, SUM_100=sum_100, RATIO=ratio, KPI=kpi)%>%tbl_df
View(KPI_df)
summary(KPI_df)
source('~/DataVisualization/Project 4/01 Data/Death_Dataframes.R', echo=TRUE)
#Graph 2: Fare vs Age w/o null
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_discrete() +
labs(title='Diamonds Crosstab\nSUM_PRICE, SUM_CARAT, SUM_PRICE / SUM_CARAT') +
labs(x=paste("COLOR"), y=paste("CLARITY")) +
layer(data=KPI_df,
mapping=aes(x=age_group, y=sex, label=SUM_DEATH),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black"),
position=position_identity()
) +
layer(data=KPI_df,
mapping=aes(x=age_group, y=sex, label=SUM_100),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", vjust=2),
position=position_identity()
) +
layer(data=KPI_df,
mapping=aes(x=age_group, y=sex, label=round(RATIO, 2)),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", vjust=4),
position=position_identity()
) +
layer(data=KPI_df,
mapping=aes(x=age_group, y=sex, fill=KPI),
stat="identity",
stat_params=list(),
geom="tile",
geom_params=list(alpha=0.50),
position=position_identity()
)
summary(KPI_df)
KPI_df <- death_df %>% group_by(AGE_GROUP %in% c("1-4 years"), SEX) %>% summarize(sum_death = sum(NUMBER_OF_DEATHS)/1000000, sum_100 = sum(DEATH_RATE_PER_100_000)/1000000) %>% mutate(ratio = sum_death / sum_100) %>% mutate(kpi = ifelse(ratio <= KPI_Low_Max_value, '03 Low', ifelse(ratio <= KPI_Medium_Max_value, '02 Medium', '01 High'))) %>% rename(age_group=AGE_GROUP, sex=SEX, SUM_DEATH=sum_death, SUM_100=sum_100, RATIO=ratio, KPI=kpi)%>%tbl_df
View(KPI_df)
summary(KPI_df)
KPI_df <- death_df %>% group_by(AGE_GROUP, SEX) %>% summarize(sum_death = sum(NUMBER_OF_DEATHS)/1000000, sum_100 = sum(DEATH_RATE_PER_100_000)/1000000) %>% mutate(ratio = sum_death / sum_100) %>% filter(AGE_GROUP%in%("10-14 years"))%>% mutate(kpi = ifelse(ratio <= KPI_Low_Max_value, '03 Low', ifelse(ratio <= KPI_Medium_Max_value, '02 Medium', '01 High'))) %>% rename(age_group=AGE_GROUP, sex=SEX, SUM_DEATH=sum_death, SUM_100=sum_100, RATIO=ratio, KPI=kpi)%>%tbl_df
View(KPI_df)
summary(KPI_df)
#Graph 2: Fare vs Age w/o null
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_discrete() +
labs(title='Diamonds Crosstab\nSUM_PRICE, SUM_CARAT, SUM_PRICE / SUM_CARAT') +
labs(x=paste("COLOR"), y=paste("CLARITY")) +
layer(data=KPI_df,
mapping=aes(x=age_group, y=sex, label=SUM_DEATH),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black"),
position=position_identity()
) +
layer(data=KPI_df,
mapping=aes(x=age_group, y=sex, label=SUM_100),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", vjust=2),
position=position_identity()
) +
layer(data=KPI_df,
mapping=aes(x=age_group, y=sex, label=round(RATIO, 2)),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", vjust=4),
position=position_identity()
) +
layer(data=KPI_df,
mapping=aes(x=age_group, y=sex, fill=KPI),
stat="identity",
stat_params=list(),
geom="tile",
geom_params=list(alpha=0.50),
position=position_identity()
)
#Graph 2: Fare vs Age w/o null
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_discrete() +
labs(title='Diamonds Crosstab\nSUM_PRICE, SUM_CARAT, SUM_PRICE / SUM_CARAT') +
labs(x=paste("COLOR"), y=paste("CLARITY")) +
layer(data=KPI_df,
mapping=aes(x=age_group, y=sex, label=round(SUM_DEATH,2)),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black"),
position=position_identity()
) +
layer(data=KPI_df,
mapping=aes(x=age_group, y=sex, label=round(SUM_100,2)),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", vjust=2),
position=position_identity()
) +
layer(data=KPI_df,
mapping=aes(x=age_group, y=sex, label=round(RATIO, 2)),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", vjust=4),
position=position_identity()
) +
layer(data=KPI_df,
mapping=aes(x=age_group, y=sex, fill=KPI),
stat="identity",
stat_params=list(),
geom="tile",
geom_params=list(alpha=0.50),
position=position_identity()
)
KPI_df <- death_df %>% group_by(AGE_GROUP, SEX) %>% summarize(sum_death = sum(NUMBER_OF_DEATHS)/1000000, sum_100 = sum(DEATH_RATE_PER_100_000)/1000000) %>% mutate(ratio = sum_death / sum_100) %>% mutate(kpi = ifelse(ratio <= KPI_Low_Max_value, '03 Low', ifelse(ratio <= KPI_Medium_Max_value, '02 Medium', '01 High'))) %>% rename(age_group=AGE_GROUP, sex=SEX, SUM_DEATH=sum_death, SUM_100=sum_100, RATIO=ratio, KPI=kpi)%>%tbl_df
View(KPI_df)
summary(KPI_df)
#Graph 2: Fare vs Age w/o null
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_discrete() +
labs(title='Diamonds Crosstab\nSUM_PRICE, SUM_CARAT, SUM_PRICE / SUM_CARAT') +
labs(x=paste("COLOR"), y=paste("CLARITY")) +
layer(data=KPI_df,
mapping=aes(x=age_group, y=sex, label=round(SUM_DEATH,2)),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black"),
position=position_identity()
) +
layer(data=KPI_df,
mapping=aes(x=age_group, y=sex, label=round(SUM_100,2)),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", vjust=2),
position=position_identity()
) +
layer(data=KPI_df,
mapping=aes(x=age_group, y=sex, label=round(RATIO, 2)),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", vjust=4),
position=position_identity()
) +
layer(data=KPI_df,
mapping=aes(x=age_group, y=sex, fill=KPI),
stat="identity",
stat_params=list(),
geom="tile",
geom_params=list(alpha=0.50),
position=position_identity()
)
KPI_Low_Max_value = .8
KPI_Medium_Max_value = 1.5
KPI_df <- death_df %>% group_by(AGE_GROUP, SEX) %>% summarize(sum_death = sum(NUMBER_OF_DEATHS)/1000000, sum_100 = sum(DEATH_RATE_PER_100_000)/1000000) %>% mutate(ratio = sum_death / sum_100) %>% mutate(kpi = ifelse(ratio <= KPI_Low_Max_value, '03 Low', ifelse(ratio <= KPI_Medium_Max_value, '02 Medium', '01 High'))) %>% rename(age_group=AGE_GROUP, sex=SEX, SUM_DEATH=sum_death, SUM_100=sum_100, RATIO=ratio, KPI=kpi)%>%tbl_df
View(KPI_df)
summary(KPI_df)
#Graph 2: Fare vs Age w/o null
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_discrete() +
labs(title='Diamonds Crosstab\nSUM_PRICE, SUM_CARAT, SUM_PRICE / SUM_CARAT') +
labs(x=paste("COLOR"), y=paste("CLARITY")) +
layer(data=KPI_df,
mapping=aes(x=age_group, y=sex, label=round(SUM_DEATH,2)),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black"),
position=position_identity()
) +
layer(data=KPI_df,
mapping=aes(x=age_group, y=sex, label=round(SUM_100,2)),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", vjust=2),
position=position_identity()
) +
layer(data=KPI_df,
mapping=aes(x=age_group, y=sex, label=round(RATIO, 2)),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", vjust=4),
position=position_identity()
) +
layer(data=KPI_df,
mapping=aes(x=age_group, y=sex, fill=KPI),
stat="identity",
stat_params=list(),
geom="tile",
geom_params=list(alpha=0.50),
position=position_identity()
)
KPI_Low_Max_value = 8
KPI_Medium_Max_value = 15
KPI_df <- death_df %>% group_by(AGE_GROUP, SEX) %>% summarize(sum_death = sum(NUMBER_OF_DEATHS)/1000000, sum_100 = sum(DEATH_RATE_PER_100_000)/1000000) %>% mutate(ratio = sum_death / sum_100) %>% mutate(kpi = ifelse(ratio <= KPI_Low_Max_value, '03 Low', ifelse(ratio <= KPI_Medium_Max_value, '02 Medium', '01 High'))) %>% rename(age_group=AGE_GROUP, sex=SEX, SUM_DEATH=sum_death, SUM_100=sum_100, RATIO=ratio, KPI=kpi)%>%tbl_df
View(KPI_df)
summary(KPI_df)
#Graph 2: Fare vs Age w/o null
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_discrete() +
labs(title='Diamonds Crosstab\nSUM_PRICE, SUM_CARAT, SUM_PRICE / SUM_CARAT') +
labs(x=paste("COLOR"), y=paste("CLARITY")) +
layer(data=KPI_df,
mapping=aes(x=age_group, y=sex, label=round(SUM_DEATH,2)),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black"),
position=position_identity()
) +
layer(data=KPI_df,
mapping=aes(x=age_group, y=sex, label=round(SUM_100,2)),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", vjust=2),
position=position_identity()
) +
layer(data=KPI_df,
mapping=aes(x=age_group, y=sex, label=round(RATIO, 2)),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", vjust=4),
position=position_identity()
) +
layer(data=KPI_df,
mapping=aes(x=age_group, y=sex, fill=KPI),
stat="identity",
stat_params=list(),
geom="tile",
geom_params=list(alpha=0.50),
position=position_identity()
)
setwd("C:/Users/Nathan R/Documents/DataVisualization/Project 4/01 Data/CSVs")
file_path <- "Effect of Disease Country Pop.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
#Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
str(df) # Uncomment this and  run just the lines to here to get column types to use for getting the list of measures.
measures <- c("Year","Number of Deaths", "Death Rate Per 100,000")
#measures <- NA # Do this if there are no measures.
#Get rid of special characters in each column.
#Google ASCII Table to understand the following:
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
library(lubridate)
#Fix date columns, this needs to be done by hand because | needs to be correct.
#                                                      \_/
#The following is an example of dealing with special cases like making state abbreviations be all upper case.
#df["State"] <- data.frame(lapply(df["State"], toupper))
#Get rid of all characters in measures except for numbers, the - sign, and period.dimensions
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_path)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
}
}
sql <- paste(sql, ");")
cat(sql)
# Three data frames for specific graphing cases
death_df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from DEATH where NUMBER_OF_DEATHS < 100000"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_nar784', PASS='orcl_nar784', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
KPI_Low_Max_value = 8
KPI_Medium_Max_value = 15
KPI_df <- death_df %>% group_by(AGE_GROUP, SEX) %>% summarize(sum_death = sum(NUMBER_OF_DEATHS)/1000000, sum_100 = sum(DEATH_RATE_PER_100_000)/1000000) %>% mutate(ratio = sum_death / sum_100) %>% mutate(kpi = ifelse(ratio <= KPI_Low_Max_value, '03 Low', ifelse(ratio <= KPI_Medium_Max_value, '02 Medium', '01 High'))) %>% rename(age_group=AGE_GROUP, sex=SEX, SUM_DEATH=sum_death, SUM_100=sum_100, RATIO=ratio, KPI=kpi)%>%tbl_df
View(KPI_df)
summary(KPI_df)
